version: '3.8'  # Versión de Docker Compose

services:
  web:
    build:
      context: .  # Contexto de construcción
      dockerfile: Dockerfile  # Dockerfile a usar
    image: api-prueba-tecnica-corona:1.0.0 # Nombre de la imagen
    volumes:
      - .:/app  # Monta el directorio actual en /app
      - static_volume:/app/static  # Volumen para archivos estáticos
    ports:
      - "80:80"  # Mapea el puerto 80 del contenedor al puerto 80 del host
    environment:
      - DEBUG=${DEBUG}  # Variable de entorno DEBUG
      - DJANGO_SETTINGS_MODULE=ml_web.settings  # Configuración de Django
      - DB_NAME=${DB_NAME}  # Nombre de la base de datos
      - DB_USER=${DB_USER}  # Usuario de la base de datos
      - DB_PASSWORD=${DB_PASSWORD}  # Contraseña de la base de datos
      - DB_HOST=${DB_HOST}  # Host de la base de datos
      - DB_PORT=${DB_PORT}  # Puerto de la base de datos
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}  # Hosts permitidos
    env_file:
      - .env  # Archivo de variables de entorno
    restart: always  # Reiniciar siempre
    depends_on: # Esperar a que el servicio db esté saludable
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python manage.py check"]  # Comando de verificación de salud
      interval: 30s  # Intervalo de verificación
      timeout: 10s  # Tiempo de espera
      retries: 3  # Reintentos

  db:
    image: postgres:13  # Imagen de PostgreSQL
    environment:
      - POSTGRES_USER=${DB_USER}  # Usuario de PostgreSQL
      - POSTGRES_DB=${DB_NAME}  # Base de datos de PostgreSQL
      - POSTGRES_PASSWORD=${DB_PASSWORD}  # Contraseña de PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volumen de datos de PostgreSQL
    ports:
      - "5432:5432"  # Mapea el puerto 5432
    restart: always  # Reiniciar siempre
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]  # Comando de verificación de salud
      interval: 30s  # Intervalo de verificación
      timeout: 10s  # Tiempo de espera
      retries: 3  # Reintentos

volumes:
  postgres_data:  # Volumen para datos de PostgreSQL
  static_volume:  # Volumen para archivos estáticos